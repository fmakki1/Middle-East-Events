<div>
                <a href=''>
                    <img />
                    <h2> Events in London</h2>
                </a>
                <a href=''>
                    <img />
                    <h2> Events in San Fransisco</h2>
                </a>
                <a href=''>
                    <img />
                    <h2> Events in Barcelona</h2>
                </a>
            </div></>

<a href="/event/london/ev1"> Event 1</a>
        <a href="/event/event1"> Event 2</a>
        <a href="/event/event1"> Event 3</a>
        <a href="/event/event1"> Event 4</a>
        <a href="/event/event1"> Event 5</a>
        <a href="/event/event1"> Event 6</a>


------------------------------------------------------------------------

<div>
          {data.map(ev => (
            <a key={ev.id} href={`/events/${ev.city}/${ev.id}`}>
            <Image width={300} height={300} alt={ev.title} src={ev.image}/>
            <h2>{ev.title}</h2>
            <p>{ev.discription}</p>

            </a>
          ))
 
          }
//the one under is the same as above but the above is written in js format so no need for the under

          <a href="/events/london/ev1">
            <img/> <h2> Event1</h2>
          </a>
          <a href="">
            <img/> <h2> Event2</h2>
          </a>
          <a href="">
            <img/> <h2> Event3</h2>
          </a>
          <a href="">
            <img/> <h2> Event4</h2>
          </a>
          <a href="">
            <img/> <h2> Event5</h2>
          </a>
          <a href="">
            <img/> <h2> Event6</h2>
          </a>
        </div>
      </div>
      </>
---------------------------------------------------------------------------------
export async function getStaticPaths() {
  const data = await import('/data/data.json');
  const allEvents = data;

  const allPaths = allEvents.map((path) => {
    return {
      params: {
        cat: path.city,
        id: path.id,
      },
    };
  });

  return {
    paths: allPaths,
    fallback: false,
  };
}
----------------------------------------------------------------------------------
const EventPage = (data) => {
  console.log(data);

    return (
        <div>
          <Image src={data.image} width={1000} height={500} alt={data.title}/>
          <h1> {data.title} </h1>
          <p> {data.description} </p>
        </div>
      
    );
};

export default EventPage;

export async function getStaticPaths() {
  const data = await import('/data/data.json');
  const allEvents = data.allEvents;

  const allPaths = allEvents.map((path) => {
    return {
      params: {
        cat: path.city,
        id: path.id,
      },
    };
  });

  return {
    paths: allPaths,
    fallback: false,
  };
}

export async function getStaticProps(context) {
  console.log(context);
  const id = context.params.id;
  const {allEvents} = await import('/data/data.json');
  const eventData = allEvents.find((ev) => id === ev.id);

  return {
    props: { data: eventData},
  };
}
-----------------------------------------------------------------------
This is how index was

import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Link from 'next/link';
import { HomePage } from '@/components/home/home-page';
const inter = Inter({ subsets: ['latin'] })

export default function Home({data}) {
  return (
    <>
      <Head>
        <title>Events App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
                
      <header>
        <nav>
          <Link legacyBehavior href='/' passHref>
            <a> Home </a>
          </Link>
          <Link legacyBehavior href='/events' passHref>
            <a> Events </a>
          </Link>
          <Link legacyBehavior href='/about-us' passHref>
            <a> About US </a>
          </Link>
          
        </nav>
      </header>
    <HomePage data={data}/>
      </main>
      <main className={styles.main}>
      {data.map((ev) => (
        <Link legacyBehavior key={ev.id} href={'/events/${ev.id}'} passHref>
          <a>
            <Image width={200} height={200} alt={ev.title} src={ev.image} /> <h2> {ev.title} </h2>
            <p> {ev.description} </p>

          </a>
          </Link>  
        ))}
      
      </main>

      <footer className={styles.footer}>
        <p> @ 2022 Time to Code - A Project Built with Next.js</p>
        
      </footer>
    </>
  )
}

export async function getServerSideProps() {
  const {events_categories} = await import('/data/data.json');
  return {
      props:{
          data: events_categories,
      },
  };
}
--------------------------------------------------------------------------------------
import AllEvents from '@/event/events-page';

const EventsPage = ({data}) => {
    return 
        <AllEvents data={data}/>;
};

export default EventsPage;

export async function getServerSideProps() {
    const {events_categories} = await import('/data/data.json');
    return {
        props: {
            data: events_categories,
        },
    };
}
---------------------------------------------------------------------------------
const EventsCatPage = ({data, pageName}) => {
    return (
        <><div>
        <h1>Events in {pageName}</h1>
        <div>
          {data.map((ev) => (
            <Link legacyBehavior key={ev.id} href={`/events/${ev.city}/${ev.id}`} passHref>
            <a>
            <Image width={300} height={300} alt={ev.title} src={ev.image}/>
            <h2>{ev.title}</h2>
            <p>{ev.description}</p>
            
            </a>
            </Link>
          ))
 
          }


          
        </div>
      </div>
      </>
    )
}
-------------------------------------------------------------------------------------
const SingleEvent = ({data}) => { 
    const inputEmail = useRef();
    console.log(inputEmail);
    const router = useRouter();

    console.log(router);
    const onSubmit = (e) => {
        e.preventDefault();
        const emailValue = inputEmail.current.value;
        const eventId = router?.query.id;
    };
-------------------------------------------------------------------------------------
import Image from "next/image";
import { useRouter } from "next/router";
import { useRef } from "react";

const SingleEvent = ({data}) => { 
    const inputEmail = useRef();
    const router = useRouter();

    const onSubmit = async (e) => {
        e.preventDefault();
        const emailValue = inputEmail.current.value;
        const eventId = router?.query.id;

        try {
            const response = await fetch('/api/email-registion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email: emailValue, eventId }),
            });

            if (!response.ok) throw new Error(`Error: ${response.status}`);
            const data = await response.json();
            console.log('POST', data);
            //POST fetch request
            //body emailValue and the eventId
        } catch (e) {
            console.log('ERROR', e);
        }
    };
      return (
          <div className="event_single_page">
             <h1> {data.title} </h1>
            <Image src={data.image} width={1000} height={500} alt={data.title}/>
            <p> {data.description} </p>
            <form onSubmit={onSubmit} className='email_registration'>
                <label>Get Registered for this event!</label>
                <input ref={inputEmail} type="email" id="email" placeholder="Please insert your email here" />
                <button type="submit">Submit</button>
            </form>
            
          </div>
        
      );
  };
  
  export default SingleEvent;
----------------------------------------------------------------------------------------------
import path from 'path';
import * as fs from 'fs/promises';

function buildPath() {
    return path.join(process.cwd(), 'data', 'data.json');
}

function extractData(filePath) {
    const jsonData = fs.readFileSync(filePath);
    const data = JSON.parse(jsonData);
    return data;
}


export default function handler (req, res) {
    const {method} = req;

    // Acces our data
    // Extract our Data (AllEvents)
          // result in 404 if there are no AllEvents
        // AllEvents - loop through them and identify the EventID
            // add the email into the emails_registered
            //check the format of the email is OK


    const filePath = buildPath();
    const {events_categories, allEvents} = extractData(filePath);

    if(!allEvents) {
        return res.status(404).json({
            status: 404,
            message: 'Events data not found'
        })
    }

    if(method === 'POST') {
        const { email, eventId } = req.body;
        //we add our code here

        const newAllEvents = allEvents.map(ev => {
            if(ev.id === eventId) {
                if(ev.emails_registered.includes(email)) {
                    res.status(409).json({meassage: 'This email has been already registered'})
                    return ev;
                }
                return {
                    ...ev, emails_registered: [...ev.emails_registered, email]
                };
            }
        return ev;
        });

        fs.writeFileSync(filePath, JSON.stringify({events_categories, allEvents: newAllEvents}))

        res.status(200).json({message: `You have been registered successfully with the email: ${email} ${eventId}`, });

    }
}
